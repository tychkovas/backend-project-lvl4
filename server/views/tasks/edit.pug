extends ../layouts/application.pug

block header
  = t('views.tasks.edit.header')

block content
  +formFor()(action=`/tasks/${task.id}` method='post')
    +input(task, 'name', t('views.tasks.name'), errors)(type="text")
    +textarea(task, 'description', t('views.tasks.description'))
    +select(task, 'statusId', t('views.tasks.status'), statuses,  errors)
    +select(task, 'executorId', t('views.tasks.executor'), users, errors)

    +select(task, 'labels', t('views.tasks.labels'), labels, errors)(multiple)
    .d-flex
      input(class="form-control" type="text" id="data_newLabel" form=null
          placeholder= t('views.tasks.newLabel.placeholder'))
      button(class='ms-3 btn btn-primary' id="btnAdd" align="bottom")= t('views.tasks.actions.newLabel')

    br
    input(name="_method" type="hidden" value="patch")
    +submit(task)(value=t('views.tasks.edit.submit'))

  
  script.
    const btnAdd = document.querySelector('#btnAdd');
    const sb = document.querySelector('#data_labels');
    const name = document.querySelector('#data_newLabel'); 
    

    btnAdd.onclick = (e) => {
            e.preventDefault();

            // validate the option
            if (name.value == '') {
                // 'Please enter the name label.'
                alert('#{t('views.tasks.newLabel.alert')}');
                return;
            }
            // create a new option
            const option = new Option(name.value, JSON.stringify({ new: name.value }));
            // add it to the list
            sb.add(option, undefined);

            // reset the value of the input
            name.value = '';
            name.focus();
        };
